"""Para a atividade dessa semana, vamos trabalhar com a seguinte situa√ß√£o:

Uma pessoa do seu time de desenvolvimento est√° escrevendo v√°rias fun√ß√µes que calculam diferentes formas de gerar juros. Veja abaixo o exemplo de uma das fun√ß√µes:

@decorator_imprimir
def juros_simples(capital, taxa, tempo):
    return capital * (taxa / 100) * tempo


Ela pediu para voc√™ escrever um decorator chamado decorator_imprimir, que ser√° usado para a fun√ß√£o chamada imprima os par√¢metros: capital, taxa e tempo, al√©m do resultado da fun√ß√£o.

Ao executar a fun√ß√£o juros_simples, ter√≠amos o seguinte resultado:

from funcoes import juros_simples

juros_simples(1000, 5, 6)
# Sa√≠da esperada:
# CAPITAL: 1000 TAXA: 5 TEMPO: 6
# RESULTADO: 300.0

Com isso, ser√° criada uma fun√ß√£o decoradora (decorator) chamada decorator_imprimir que, ao ser usada com qualquer fun√ß√£o parecida com a juros_simples (isto √©, uma fun√ß√£o que receba 3 par√¢metros ‚Äì capital, taxa, tempo), seja retornado um valor num√©rico correspondente ao juros."""

# Resultado 

# -------------------------------
# Decorator que imprime par√¢metros e resultado
# -------------------------------
def decorator_imprimir(func):
    def wrapper(capital, taxa, tempo):
        resultado = func(capital, taxa, tempo)
        print(f"Capital: {capital}, Taxa: {taxa}, Tempo: {tempo}")
        print(f"Resultado: {resultado}")
        return resultado
    return wrapper


# -------------------------------
# Exemplo de fun√ß√£o: Juros Simples
# -------------------------------
@decorator_imprimir
def juros_simples(capital, taxa, tempo):
    """
    F√≥rmula: J = C * i * t
    capital: valor inicial
    taxa: taxa de juros (em decimal, ex: 0.05 = 5%)
    tempo: per√≠odo
    """
    return capital * taxa * tempo


# -------------------------------
# Testando
# -------------------------------
if __name__ == "__main__":
    juros_simples(1000, 0.05, 12)


# Explica√ß√£o 

"""üìå O que o c√≥digo faz
Decorator decorator_imprimir

Recebe a fun√ß√£o como par√¢metro.

Cria o wrapper que executa a fun√ß√£o original.

Imprime os par√¢metros e o resultado.

Retorna o resultado normalmente.

Fun√ß√£o juros_simples

Calcula juros simples pela f√≥rmula:

ùêΩ
=
ùê∂
√ó
ùëñ
√ó
ùë°
Onde:

C = capital

i = taxa (em decimal, ex: 0.05 = 5%)

t = tempo

Execu√ß√£o

Quando voc√™ chama:

python
juros_simples(1000, 0.05, 12)

O decorator intercepta a chamada e imprime:

C√≥digo
Capital: 1000, Taxa: 0.05, Tempo: 12
Resultado: 600.0

‚úÖ Conclus√£o
esse c√≥digo atende 100% ao enunciado da atividade. Foi criado o decorator, aplicado na fun√ß√£o juros_simples e obteve a sa√≠da esperada."""