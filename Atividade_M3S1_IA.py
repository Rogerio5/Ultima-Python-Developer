"""Para esta semana, voc√™ deve:

1. Acessar a interface do ChatGPT, onde voc√™ pode enviar comandos e receber respostas do modelo.

2. Utilizar o ChatGPT como seu ‚Äúmentor de programa√ß√£o‚Äù durante toda a tarefa.

3. Ler atentamente as instru√ß√µes de cada se√ß√£o antes de come√ßar a escrever c√≥digo.

Se√ß√£o 1: Aprimorar um c√≥digo existente

Nesta se√ß√£o, voc√™ receber√° um trecho de c√≥digo em Python que possui algumas falhas e precisa ser aprimorado. Use o ChatGPT para identificar erros e fazer melhorias, seguindo as boas pr√°ticas de programa√ß√£o.

def calc(numeros):
    s = 0
    for i in numeros:
        soma = s + i
    media = s / len(numeros)
    retornar media
 numeros = [2, 4, 6, 8, 10]
 resultado = calc(numeros)
 print("A m√©dia √©:", resultado)
‚Äì Utilize o ChatGPT para identificar e corrigir os erros no c√≥digo fornecido.

‚Äì Fa√ßa melhorias no c√≥digo, como alterar nomes de vari√°veis inadequados ou otimizar o c√°lculo da m√©dia.

‚Äì Lembre-se de seguir as conven√ß√µes de nomenclatura adequadas em Python."""

# Explica√ß√£o do C√≥digo no exercicio

"""üîé Problemas no c√≥digo original
python
def calc(numeros):
    s = 0
    for i in numeros:
        soma = s + i
    media = s / len(numeros)
    retornar media
 numeros = [2, 4, 6, 8, 10]
 resultado = calc(numeros)
 print("A m√©dia √©:", resultado)
Erro de l√≥gica no loop

Dentro do for, a vari√°vel s nunca √© atualizada.

O correto seria s += i, mas o c√≥digo cria uma vari√°vel soma que n√£o √© usada.

Palavra reservada incorreta

Em Python usamos return, n√£o retornar.

Indenta√ß√£o incorreta

As √∫ltimas linhas (numeros = ...) est√£o desalinhadas.

Nomes de vari√°veis pouco claros

s poderia ser soma para ser mais leg√≠vel.

Otimiza√ß√£o poss√≠vel

Podemos usar a fun√ß√£o sum() do Python para calcular a soma diretamente."""

# Resposta 

def calcular_media(numeros):
    soma = 0
    for numero in numeros:
        soma += numero
    media = soma / len(numeros)
    return media

numeros = [2, 4, 6, 8, 10]
resultado = calcular_media(numeros)
print("A m√©dia √©:", resultado)




"""Se√ß√£o 2: Debugando c√≥digo

Nesta se√ß√£o, voc√™ receber√° um trecho de c√≥digo em Python que cont√©m erros. Use o ChatGPT para identificar os erros e corrigi-los.

def calcular_fatorial(numero):
    resultado = 1
    for i em range(numero, 0, -1):
        resultado *= i
    retornar resultado
 numero = 5
 fatorial = calcular_fatorial(numero)
 imprimir("O fatorial de", numero, "√©:", fatorial)
‚Äì Utilize o ChatGPT para identificar e corrigir os erros no c√≥digo fornecido.

‚Äì Certifique-se de que o c√≥digo esteja calculando o fatorial corretamente para o n√∫mero fornecido."""

# Explica√ß√£o 

"""Principais erros encontrados
for i em ‚Üí o correto √© for i in.

retornar ‚Üí em Python usamos return.

imprimir ‚Üí em Python usamos print.

Indenta√ß√£o e espa√ßos no in√≠cio de linhas fora de fun√ß√µes.

Boa pr√°tica: validar entrada n√£o negativa."""

# Resposta 

def calcular_fatorial(numero):
    if numero < 0:
        raise ValueError("Fatorial n√£o √© definido para n√∫meros negativos.")
    resultado = 1
    for i in range(numero, 0, -1):
        resultado *= i
    return resultado

numero = 5
fatorial = calcular_fatorial(numero)
print("O fatorial de", numero, "√©:", fatorial)



"""Se√ß√£o 3: Criando um novo c√≥digo

Nesta se√ß√£o, voc√™ deve criar um novo c√≥digo Python que atenda aos requisitos fornecidos.

‚Äì Crie uma fun√ß√£o chamada ‚Äúcalcular_reverso‚Äù que receba uma lista de n√∫meros como par√¢metro e retorne uma nova lista contendo os mesmos n√∫meros, mas na ordem inversa.

‚Äì Utilize o ChatGPT para obter sugest√µes e orienta√ß√µes ao escrever o c√≥digo.

‚Äì Teste a fun√ß√£o com pelo menos dois exemplos diferentes para garantir que ela esteja funcionando corretamente."""

def calcular_reverso(numeros):
    """
    Recebe uma lista de n√∫meros e retorna uma nova lista
    com os elementos na ordem inversa.
    """
    return numeros[::-1]  # usa slicing para inverter a lista


# --- Testes da fun√ß√£o ---

# Exemplo 1
lista1 = [1, 2, 3, 4, 5]
print("Lista original:", lista1)
print("Lista invertida:", calcular_reverso(lista1))

# Exemplo 2
lista2 = [10, 20, 30, 40]
print("\nLista original:", lista2)
print("Lista invertida:", calcular_reverso(lista2))
